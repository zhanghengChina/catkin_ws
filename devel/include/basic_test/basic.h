// Generated by gencpp from file basic_test/basic.msg
// DO NOT EDIT!


#ifndef BASIC_TEST_MESSAGE_BASIC_H
#define BASIC_TEST_MESSAGE_BASIC_H

#include <ros/service_traits.h>


#include <basic_test/basicRequest.h>
#include <basic_test/basicResponse.h>


namespace basic_test
{

struct basic
{

typedef basicRequest Request;
typedef basicResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct basic
} // namespace basic_test


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::basic_test::basic > {
  static const char* value()
  {
    return "2a5c7a37218262bae4fcfaa1007692aa";
  }

  static const char* value(const ::basic_test::basic&) { return value(); }
};

template<>
struct DataType< ::basic_test::basic > {
  static const char* value()
  {
    return "basic_test/basic";
  }

  static const char* value(const ::basic_test::basic&) { return value(); }
};


// service_traits::MD5Sum< ::basic_test::basicRequest> should match 
// service_traits::MD5Sum< ::basic_test::basic > 
template<>
struct MD5Sum< ::basic_test::basicRequest>
{
  static const char* value()
  {
    return MD5Sum< ::basic_test::basic >::value();
  }
  static const char* value(const ::basic_test::basicRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::basic_test::basicRequest> should match 
// service_traits::DataType< ::basic_test::basic > 
template<>
struct DataType< ::basic_test::basicRequest>
{
  static const char* value()
  {
    return DataType< ::basic_test::basic >::value();
  }
  static const char* value(const ::basic_test::basicRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::basic_test::basicResponse> should match 
// service_traits::MD5Sum< ::basic_test::basic > 
template<>
struct MD5Sum< ::basic_test::basicResponse>
{
  static const char* value()
  {
    return MD5Sum< ::basic_test::basic >::value();
  }
  static const char* value(const ::basic_test::basicResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::basic_test::basicResponse> should match 
// service_traits::DataType< ::basic_test::basic > 
template<>
struct DataType< ::basic_test::basicResponse>
{
  static const char* value()
  {
    return DataType< ::basic_test::basic >::value();
  }
  static const char* value(const ::basic_test::basicResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // BASIC_TEST_MESSAGE_BASIC_H
